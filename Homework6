--1 задание
--1 вариант
SELECT
 sol.OrderLineID,
 sc.CustomerName,
 SUM(sol.Quantity*sol.UnitPrice) 
 OVER (PARTITION BY MONTH(sol.PickingCompletedWhen) 
  ORDER BY MONTH(sol.PickingCompletedWhen)
  ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS TOTAL_SUM,
MONTH(sol.PickingCompletedWhen) AS [Month]
FROM Sales.OrderLines sol
JOIN Sales.Orders AS so 
ON sol.OrderID=so.OrderID
JOIN Sales.Customers AS sc 
ON sc.CustomerID=so.CustomerID
WHERE sol.PickingCompletedWhen>='2015-01-01';

--2 вариант

SELECT
 sol.OrderLineID,
 sc.CustomerName,
 MONTH(sol.PickingCompletedWhen) AS [Month],
	 (SELECT
	 SUM(sol2.Quantity*sol2.UnitPrice) 
	 FROM Sales.OrderLines sol2
	 WHERE MONTH(sol2.PickingCompletedWhen)<=MONTH(sol.PickingCompletedWhen)
	 AND
	 sol2.PickingCompletedWhen>='2015-01-01') as TOTAL_SUM
FROM Sales.OrderLines sol
JOIN Sales.Orders AS so 
ON sol.OrderID=so.OrderID
JOIN Sales.Customers AS sc 
ON sc.CustomerID=so.CustomerID
WHERE sol.PickingCompletedWhen>='2015-01-01'
ORDER BY sol.PickingCompletedWhen ASC;

--2 задание
;WITH  
topSI
 AS
(SELECT
  sol.StockItemID, 
  ROW_NUMBER () OVER (PARTITION BY MONTH(so.OrderDate) ORDER BY COUNT(sol.Quantity) DESC) AS Date_order,
  sol.Quantity,
  so.OrderDate,
  MONTH(so.OrderDate) AS [MONTH]
  FROM sales.OrderLines sol
  JOIN Warehouse.StockItems wsi 
  ON wsi.StockItemID=sol.StockItemID
  JOIN Sales.Orders so 
  ON sol.OrderID=so.OrderID
  GROUP BY sol.StockItemID, sol.Quantity, so.OrderDate, MONTH(so.OrderDate)
 )
SELECT *
FROM topSI
WHERE Date_order<=2
AND
YEAR(topSI.OrderDate)='2016'
ORDER BY topSI.OrderDate, topSI.Quantity ASC;

--3 задание
SELECT * 
FROM(
SELECT wsi.StockItemID, wsi.StockItemName, wsi.UnitPrice, wsi.TypicalWeightPerUnit,
ROW_NUMBER() OVER (PARTITION BY LEFT(wsi.StockItemName,1) ORDER BY wsi.StockItemName) AS ROW_STOCKNAME, 
COUNT(*)OVER(),
COUNT(*)OVER(PARTITION	BY LEFT(wsi.StockItemName,1)),
LAG(wsi.StockItemID)OVER (ORDER BY wsi.StockItemName),
LAG(wsi.StockItemName,2,'No Items') OVER (ORDER BY wsi.StockItemName),
ROW_NUMBER() OVER (PARTITION BY wsi.TypicalWeightPerUnit ORDER BY wsi.StockItemName) AS ROW_WEIGHT
FROM Warehouse.StockItems wsi
GROUP BY wsi.StockItemID) AS A
WHERE A.ROW_WEIGHT<=30;


--4 задание
SELECT ap.FullName, 
LAST_VALUE(sc.CustomerName) OVER (PARTITION BY ap.FullName ORDER BY ap.FullName) AS lsv, 
si.SalespersonPersonID, 
si.CustomerID, 
sc.CustomerName, 
sol.PickingCompletedWhen, 
(sol.Quantity*sol.UnitPrice) AS TOTALSALE
FROM Sales.Invoices si
JOIN Application.People ap ON ap.PersonID = si.SalespersonPersonID
JOIN Sales.Customers sc ON sc.CustomerID = si.CustomerID
JOIN Sales.OrderLines sol ON sol.OrderID = si.OrderID
GROUP BY ap.FullName, si.CustomerID, sc.CustomerName, si.SalespersonPersonID, ap.PreferredName, sol.PickingCompletedWhen, (sol.Quantity*sol.UnitPrice)
ORDER BY sol.PickingCompletedWhen DESC;

--5 задание
SELECT *
FROM
(SELECT 
sc.CustomerID, 
sc.CustomerName,
wsi.StockItemID,
ROW_NUMBER () OVER (PARTITION BY MAX(sol.UnitPrice) ORDER BY sc.CustomerID DESC) AS MaxUnitPrice,
sol.UnitPrice,
sol.PickingCompletedWhen
FROM Sales.OrderLines sol
  JOIN Sales.Orders so 
  ON sol.OrderID=so.OrderID
  JOIN Sales.Customers sc
  ON sc.CustomerID = so.CustomerID
  JOIN Warehouse.StockItems wsi
  ON wsi.StockItemID = sol.StockItemID
GROUP BY sc.CustomerID, sc.CustomerName, wsi.StockItemID, sol.UnitPrice, sol.PickingCompletedWhen)
AS A
WHERE A.MaxUnitPrice <=2;
