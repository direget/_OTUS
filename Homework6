--1 задание
--1 вариант
SELECT
 sol.OrderLineID,
 sc.CustomerName,
 sol.PickingCompletedWhen,
 SUM(sol.Quantity*sol.UnitPrice) 
 OVER (PARTITION BY YEAR(sol.PickingCompletedWhen) 
  ORDER BY MONTH(sol.PickingCompletedWhen)) AS SaleAmountbyMonth,
MONTH(sol.PickingCompletedWhen) AS [Month]
FROM Sales.OrderLines sol
JOIN Sales.Orders AS so ON sol.OrderID=so.OrderID
JOIN Sales.Customers AS sc ON sc.CustomerID=so.CustomerID
WHERE sol.PickingCompletedWhen>='2015-01-01';

--2 вариант

SELECT
sol.OrderLineID,
sc.CustomerName,
sol.PickingCompletedWhen,
(SELECT 
SUM(sol2.Quantity*sol2.UnitPrice)
FROM Sales.OrderLines sol2
WHERE sol2.PickingCompletedWhen >= '2015-01-01'
AND sol2.PickingCompletedWhen<=EOMONTH(sol.PickingCompletedWhen)
) AS SaleAmount,
MONTH(sol.PickingCompletedWhen) AS [Month]
FROM Sales.OrderLines sol
JOIN Sales.Orders AS so ON sol.OrderID=so.OrderID
JOIN Sales.Customers AS sc ON sc.CustomerID=so.CustomerID
WHERE sol.PickingCompletedWhen>='2015-01-01'
ORDER BY sol.PickingCompletedWhen, OrderLineID;

--2 задание

SELECT topsi.StockItemID, 
topSI.StockItemName, 
topSI.Date_order,
topSI.PickingCompletedWhen
FROM
(
  SELECT 
  sol.StockItemID, 
  wsi.StockItemName, 
  ROW_NUMBER () OVER (PARTITION BY  MONTH(sol.PickingCompletedWhen) ORDER BY Count(sol.Quantity) DESC) AS Date_order,
  sol.Quantity,
  sol.PickingCompletedWhen
  FROM Sales.OrderLines sol
  JOIN Warehouse.StockItems wsi ON wsi.StockItemID=sol.StockItemID
  JOIN Sales.Orders so ON sol.OrderID=so.OrderID
  JOIN Sales.OrderLines sol2 ON sol.OrderLineID=sol2.OrderLineID
  WHERE YEAR(so.OrderDate)='2016' 
  AND MONTH(sol.PickingCompletedWhen)<=MONTH(sol2.PickingCompletedWhen)
  GROUP BY sol.PickingCompletedWhen, sol.StockItemID, wsi.StockItemName, sol.Quantity
  ) topSI
WHERE topSI.Date_order<=2;

--3 задание

SELECT wsi.StockItemID, wsi.StockItemName, wsi.Brand, wsi.UnitPrice, wsi.TypicalWeightPerUnit,
ROW_NUMBER() OVER (PARTITION BY LEFT(wsi.StockItemName,1) ORDER BY wsi.StockItemName) AS Row_Stockname, 
COUNT(*)OVER() AS All_Count,
COUNT(*)OVER(PARTITION BY LEFT(wsi.StockItemName,1)) AS Count_of_left_symbol,
LEAD(wsi.StockItemID) OVER (ORDER BY wsi.StockItemName) AS Next_ID,
LAG(wsi.StockItemName,2,'No Items') OVER (ORDER BY wsi.StockItemName) AS Desc_Name,
NTILE(30) OVER (PARTITION BY wsi.TypicalWeightPerUnit ORDER BY wsi.TypicalWeightPerUnit) AS Number_Group
FROM Warehouse.StockItems wsi
GROUP BY wsi.StockItemID, wsi.StockItemName, wsi.Brand, wsi.UnitPrice, wsi.TypicalWeightPerUnit;

--4 задание

SELECT ap.FullName, 
LAST_VALUE(sc.CustomerName) OVER (PARTITION BY ap.FullName ORDER BY ap.FullName RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING) AS lsv, 
si.SalespersonPersonID, 
si.CustomerID, 
sc.CustomerName, 
sol.PickingCompletedWhen, 
(sol.Quantity*sol.UnitPrice) AS TOTALSALE
FROM Sales.Invoices si
JOIN Application.People ap ON ap.PersonID = si.SalespersonPersonID
JOIN Sales.Customers sc ON sc.CustomerID = si.CustomerID
JOIN Sales.OrderLines sol ON sol.OrderID = si.OrderID
GROUP BY ap.FullName, si.SalespersonPersonID, si.CustomerID, sc.CustomerName, sol.PickingCompletedWhen, (sol.Quantity*sol.UnitPrice)
ORDER BY sol.PickingCompletedWhen DESC;


--5 задание

SELECT *
FROM
(SELECT 
sc.CustomerID, 
sc.CustomerName,
wsi.StockItemID,
ROW_NUMBER () OVER (PARTITION BY sc.CustomerID ORDER BY sol.UnitPrice DESC) AS MaxUnitPrice,
sol.UnitPrice,
sol.PickingCompletedWhen
FROM Sales.OrderLines sol
  JOIN Sales.Orders so ON sol.OrderID=so.OrderID
  JOIN Sales.Customers sc ON sc.CustomerID = so.CustomerID
  JOIN Warehouse.StockItems wsi ON wsi.StockItemID = sol.StockItemID)
AS A
WHERE A.MaxUnitPrice <=2;
